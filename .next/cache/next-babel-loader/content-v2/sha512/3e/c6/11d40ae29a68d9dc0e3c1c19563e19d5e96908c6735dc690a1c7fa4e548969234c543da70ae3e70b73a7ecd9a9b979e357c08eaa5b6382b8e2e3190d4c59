{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/binkid/Music/React_Digital_service_Landing_page/components/funfact-one.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport { FunfactData } from \"@/data\";\n\nvar FunfactOne = function FunfactOne() {\n  _s();\n\n  var _useState = useState({\n    startCounter: false\n  }),\n      counter = _useState[0],\n      setCounter = _useState[1];\n\n  var onVisibilityChange = function onVisibilityChange(isVisible) {\n    if (isVisible) {\n      setCounter({\n        startCounter: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"commonSection funfact\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: FunfactData.map(function (_ref, index) {\n          var title = _ref.title,\n              countNumber = _ref.countNumber;\n          return /*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            md: 6,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"singlefunfact text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"timer\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"countSpan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(VisibilitySensor, {\n                  onChange: onVisibilityChange,\n                  offset: {\n                    top: 10\n                  },\n                  delayedCall: true,\n                  children: /*#__PURE__*/_jsxDEV(CountUp, {\n                    end: counter.startCounter ? countNumber : 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 30,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, _this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FunfactOne, \"mlCyu4ifstXuKNb+njEY6pTki+0=\");\n\n_c = FunfactOne;\nexport default FunfactOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"FunfactOne\");","map":{"version":3,"sources":["/home/binkid/Music/React_Digital_service_Landing_page/components/funfact-one.js"],"names":["React","useState","Container","Row","Col","CountUp","VisibilitySensor","FunfactData","FunfactOne","startCounter","counter","setCounter","onVisibilityChange","isVisible","map","index","title","countNumber","top"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,kBACOP,QAAQ,CAAC;AACrCQ,IAAAA,YAAY,EAAE;AADuB,GAAD,CADf;AAAA,MAChBC,OADgB;AAAA,MACPC,UADO;;AAIvB,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAAe;AACxC,QAAIA,SAAJ,EAAe;AACbF,MAAAA,UAAU,CAAC;AAAEF,QAAAA,YAAY,EAAE;AAAhB,OAAD,CAAV;AACD;AACF,GAJD;;AAKA,sBACE;AAAS,IAAA,SAAS,EAAC,uBAAnB;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAA,kBACGF,WAAW,CAACO,GAAZ,CAAgB,gBAAyBC,KAAzB;AAAA,cAAGC,KAAH,QAAGA,KAAH;AAAA,cAAUC,WAAV,QAAUA,WAAV;AAAA,8BACf,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAY,YAAA,EAAE,EAAE,CAAhB;AAAmB,YAAA,EAAE,EAAE,EAAvB;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,2BAAf;AAAA,sCACE;AAAI,gBAAA,SAAS,EAAC,OAAd;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,QAAC,gBAAD;AACE,kBAAA,QAAQ,EAAEL,kBADZ;AAEE,kBAAA,MAAM,EAAE;AAAEM,oBAAAA,GAAG,EAAE;AAAP,mBAFV;AAGE,kBAAA,WAAW,MAHb;AAAA,yCAKE,QAAC,OAAD;AAAS,oBAAA,GAAG,EAAER,OAAO,CAACD,YAAR,GAAuBQ,WAAvB,GAAqC;AAAnD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,yBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAWE;AAAA,0BAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,uBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,aAAgCD,KAAhC;AAAA;AAAA;AAAA;AAAA,mBADe;AAAA,SAAhB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAyBD,CAlCD;;GAAMP,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport { FunfactData } from \"@/data\";\n\nconst FunfactOne = () => {\n  const [counter, setCounter] = useState({\n    startCounter: false\n  });\n  const onVisibilityChange = (isVisible) => {\n    if (isVisible) {\n      setCounter({ startCounter: true });\n    }\n  };\n  return (\n    <section className=\"commonSection funfact\">\n      <Container>\n        <Row>\n          {FunfactData.map(({ title, countNumber }, index) => (\n            <Col lg={3} md={6} sm={12} key={index}>\n              <div className=\"singlefunfact text-center\">\n                <h1 className=\"timer\">\n                  <span className=\"countSpan\"></span>\n                  <VisibilitySensor\n                    onChange={onVisibilityChange}\n                    offset={{ top: 10 }}\n                    delayedCall\n                  >\n                    <CountUp end={counter.startCounter ? countNumber : 0} />\n                  </VisibilitySensor>\n                </h1>\n                <h3>{title}</h3>\n              </div>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </section>\n  );\n};\n\nexport default FunfactOne;\n"]},"metadata":{},"sourceType":"module"}